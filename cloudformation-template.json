{
  "Parameters" : {
    "SSHLocation"  : {
       "Description" : "The IP address range that can be used to connect using SSH or RDP to the Amazon EC2 instances.",
       "Type" : "String",
       "MinLength" : "9",
       "MaxLength" : "18",
       "Default" : "0.0.0.0/0",
       "AllowedPattern" : "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
       "ConstraintDescription" : "Must be a valid IP CIDR range of the form x.x.x.x/x."
    }
  },
  "Mappings": {
    "RegionMap": {
      "ap-northeast-1": {
        "ImageId": "ami-29160d47"
      },
      "ap-northeast-2": {
        "ImageId": "ami-cf32faa1"
      },
      "ap-southeast-1": {
        "ImageId": "ami-1ddc0b7e"
      },
      "ap-southeast-2": {
        "ImageId": "ami-0c95b86f"
      },
      "eu-central-1": {
        "ImageId": "ami-d3c022bc"
      },
      "eu-west-1": {
        "ImageId": "ami-b0ac25c3"
      },
      "sa-east-1": {
        "ImageId": "ami-fb890097"
      },
      "us-east-1": {
        "ImageId": "ami-f5f41398"
      },
      "us-west-1": {
        "ImageId": "ami-6e84fa0e"
      },
      "us-west-2": {
        "ImageId": "ami-d0f506b0"
      }
    }
  },
  "Resources": {
    "CodeDeployServiceRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [{
            "Sid": "",
            "Effect": "Allow",
            "Principal": {
              "Service": ["codedeploy.amazonaws.com", "ec2.amazonaws.com"]
            },
            "Action": "sts:AssumeRole"
          }]
        },
        "Path": "/",
        "ManagedPolicyArns": ["arn:aws:iam::aws:policy/service-role/AWSCodeDeployRole"]
      }
    },
    "CodeDeployInstanceProfile": {
      "Type": "AWS::IAM::InstanceProfile",
      "Properties": {
        "Path": "/",
        "Roles": [{
          "Ref": "CodeDeployServiceRole"
        }]
      }
    },
    "CodeDeployPermissionPolicy": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [{
            "Effect": "Allow",
            "Action": [
              "autoscaling:*",
              "ec2:*",
              "tag:GetTags",
              "tag:GetResources",
              "sns:Publish",
              "s3:*",
              "elasticloadbalancing:*"
            ],
            "Resource": "*"
          }]
        },
        "PolicyName": "CodeDeployPermissionPolicy",
        "Roles": [{ "Ref": "CodeDeployServiceRole" }]
      }
    },
    "TestSecurityGroup" : {
       "Type" : "AWS::EC2::SecurityGroup",
       "Properties" : {
           "GroupDescription" : "Enable HTTP access via port 80 and SSH access.",
           "SecurityGroupIngress" : [{
               "IpProtocol" : "tcp",
               "FromPort" : "80",
               "ToPort" : "80",
               "CidrIp" : "0.0.0.0/0"
           }, {
               "IpProtocol" : "tcp",
               "FromPort" : "22",
               "ToPort" : "22",
               "CidrIp" : {
                   "Ref" : "SSHLocation"
               }
           }]
       }
    },
    "ElasticLoadBalancer" : {
      "Type" : "AWS::ElasticLoadBalancing::LoadBalancer",
      "Properties" : {
        "AvailabilityZones" : { "Fn::GetAZs" : { "Ref" : "AWS::Region" } },
        "Listeners": [{
          "LoadBalancerPort": "80",
          "InstancePort": "80",
          "Protocol": "HTTP"
        }],
        "HealthCheck": {
          "Target": "HTTP:80/",
          "HealthyThreshold": "2",
          "UnhealthyThreshold": "5",
          "Interval": "30",
          "Timeout": "5"
        }
      }
    },
    "TestELBv2": {
      "Type" : "AWS::ElasticLoadBalancingV2::LoadBalancer",
      "Properties" : {    
        "Subnets": ["subnet-e38d2cc9", "subnet-813d49bc"]
      }
    },
    "TestELBv2TargetGroup": {
      "Type" : "AWS::ElasticLoadBalancingV2::TargetGroup",
      "Properties" : {
        "Name": "TestTargetGroup",
        "Port" : 80,
        "Protocol" : "HTTP",
        "VpcId" : "vpc-41301825"
      }
    },
    "TestLaunchConfig": {
        "Type": "AWS::AutoScaling::LaunchConfiguration",
        "Properties": {
            "IamInstanceProfile": {
                "Ref": "CodeDeployInstanceProfile"
            },
            "ImageId": {
                "Fn::FindInMap": ["RegionMap", { "Ref": "AWS::Region" }, "ImageId"]
            },
            "InstanceType": "t2.micro",
            "KeyName": "merkes-aws",
            "SecurityGroups": [{
                "Ref": "TestSecurityGroup"
            }],
            "UserData": {
                "Fn::Base64": {
                    "Fn::Join": ["\n", [
                        "#!/bin/bash",
                        "yum -y update",
                        "yum -y install ruby",
                        "yum -y install wget",
                        "cd /home/ec2-user",
                        "wget https://aws-codedeploy-us-east-1.s3.amazonaws.com/latest/install",
                        "chmod +x ./install",
                        "./install auto"
                    ]]
                }
            }
        }
    },
    "TestAutoScalingGroup": {
        "Type" : "AWS::AutoScaling::AutoScalingGroup",
        "Properties" : {
            "AvailabilityZones" : { "Fn::GetAZs" : { "Ref" : "AWS::Region" } },
            "LaunchConfigurationName" : { "Ref" : "TestLaunchConfig" },
            "MaxSize" : "1",
            "MinSize" : "1",
            "DesiredCapacity": "1"
        }
    },
    "TestEC2Instance" : {
      "Type" : "AWS::EC2::Instance",
      "Properties" : {
        "ImageId" : {
            "Fn::FindInMap": ["RegionMap", { "Ref": "AWS::Region" }, "ImageId"]
        },
        "InstanceType": "t2.micro",
        "IamInstanceProfile": {
            "Ref": "CodeDeployInstanceProfile"
        },
        "KeyName" : "try-blue-green",
        "SecurityGroupIds": [{
            "Fn::GetAtt" : [ "TestSecurityGroup" , "GroupId" ]
        }],
        "Tags": [{
          "Key": "Name",
          "Value": "TestELB"
        }],
        "UserData": {
            "Fn::Base64": {
                "Fn::Join": ["\n", [
                    "#!/bin/bash",
                    "yum -y update",
                    "yum -y install ruby",
                    "yum -y install wget",
                    "cd /home/ec2-user",
                    "wget https://aws-codedeploy-us-east-1.s3.amazonaws.com/latest/install",
                    "chmod +x ./install",
                    "./install auto"
                ]]
            }
        }
      }
    },
    "CodeDeployApp": {
      "Type" : "AWS::CodeDeploy::Application",
      "Properties" : {
        "ApplicationName": "Test"
      }
    },
    "CodeDeployDeploymentConfig": {
      "Type" : "AWS::CodeDeploy::DeploymentConfig",
      "Properties" : {
        "DeploymentConfigName": "Test",
        "MinimumHealthyHosts": {
          "Type": "FLEET_PERCENT",
          "Value": 0
        }
      }
    },
    "CodeDeployDeploymentGroup": {
      "Type": "AWS::CodeDeploy::DeploymentGroup",
      "Properties": {
        "ApplicationName": { "Ref": "CodeDeployApp" },
        "AutoScalingGroups": [{ "Ref": "TestAutoScalingGroup" }],
        "DeploymentConfigName": { "Ref": "CodeDeployDeploymentConfig" },
        "DeploymentGroupName": "Testing",
        "Ec2TagFilters" : [{
          "Key": "Name",
          "Value": "TestELB",
          "Type": "KEY_AND_VALUE"
        }],
        "ServiceRoleArn": { "Fn::GetAtt": ["CodeDeployServiceRole", "Arn"] }
      }
    }
  }
}
